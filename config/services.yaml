# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: '../vendor/beberlei/doctrineextensions/config/mysql.yml' }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.scheme: '%env(string:ROUTE_PROTOCOL)%'
    router.request_context.host: '%env(string:ROUTE_HOST)%'
    router.request_context.base_url: '%env(string:ROUTE_BASE)%'

    asset.request_context.base_path: '%env(string:ROUTE_BASE)%'
    asset.request_context.secure: auto

    dhil.matomo_enabled: '%env(bool:MATOMO_ENABLED)%'
    dhil.matomo_url: //matomo.lib.sfu.ca/library/
    dhil.matomo_siteid: 34
    dhil.matomo_domain: dhil.lib.sfu.ca/newn

    oclc.key: '%env(string:OCLC_KEY)%'
    oclc.secret: '%env(string:OCLC_SECRET)%'

    page_size: 25

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Command\UpdateSubjectsCommand:
        arguments:
            $key: '%oclc.key%'
            $secret: '%oclc.secret%'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments', 'knp_paginator.injectable']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main}
